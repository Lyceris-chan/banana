name: Build Custom Alpine ISO

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # You can change this if using a self-hosted runner with Alpine preinstalled

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Alpine environment
        run: |
          sudo apt-get update
          sudo apt-get install -y alpine-sdk alpine-conf syslinux xorriso squashfs-tools grub grub-efi doas
          sudo adduser --disabled-password --gecos "" build
          sudo adduser build abuild
          echo "permit :abuild" | sudo tee /etc/doas.d/doas.conf
          sudo su - build

      - name: Clone Alpine aports repository
        run: |
          git clone --depth=1 https://gitlab.alpinelinux.org/alpine/aports.git
          cd aports

      - name: Install signing keys and setup environment
        run: |
          abuild-keygen -i -a
          doas apk update
          mkdir -pv ~/tmp
          export TMPDIR=~/tmp

      - name: Set up custom Extended profile
        run: |
          export PROFILENAME=extended
          cat << 'EOF' > ~/aports/scripts/mkimg.$PROFILENAME.sh
          profile_$PROFILENAME() {
              profile_extended
              kernel_cmdline="unionfs_size=512M console=tty0 console=ttyS0,115200"
              apks="$apks upower bash"
              local _k _a
              for _k in $kernel_flavors; do
                  apks="$apks linux-$_k"
                  for _a in $kernel_addons; do
                      apks="$apks $_a-$_k"
                  done
              done
              apks="$apks linux-firmware"
              apkovl="aports/scripts/genapkovl-mkimgoverlay.sh"
          }
          EOF
          chmod +x ~/aports/scripts/mkimg.$PROFILENAME.sh

      - name: Create apkovl for custom profile
        run: |
          cat << 'EOF' > ~/aports/scripts/genapkovl-mkimgoverlay.sh
          mkdir -p "$tmp"/etc/apk
          makefile root:root 0644 "$tmp"/etc/apk/world <<EOF
          alpine-base
          upower
          bash
          EOF
          rc_add upower boot
          EOF

      - name: Build the custom ISO
        run: |
          mkdir -p ~/iso
          sh ~/aports/scripts/mkimage.sh --tag edge \
              --outdir ~/iso \
              --arch x86_64 \
              --repository https://dl-cdn.alpinelinux.org/alpine/edge/main \
              --profile extended

      - name: Install Upower and dependencies
        run: |
          doas apk add upower glib libgudev musl

      - name: Run battery health check script
        run: |
          cat << 'EOF' > ~/battery-check.sh
          #!/bin/bash
          for battery in \$(upower -e | grep battery); do
              upower -i \$battery
              capacity=\$(upower -i \$battery | grep "capacity" | awk '{print \$2}')
              echo "Battery Capacity: \$capacity%"
              if (( \$(echo "\$capacity >= 80" | bc -l) )); then
                  echo -e "\e[32mPASS\e[0m"  # Green for pass
              else
                  echo -e "\e[31mFAIL\e[0m"  # Red for fail
              fi
          done
          echo "Press any key to shut down..."
          read -n 1
          shutdown now
          EOF
          chmod +x ~/battery-check.sh
          ./battery-check.sh

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v3
        with:
          name: custom-alpine-iso
          path: ~/iso
