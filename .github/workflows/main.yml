name: Build Custom Alpine ISO

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-latest
    container:
      image: alpine:edge
    steps:
      - name: Install required packages
        run: |
          apk update
          apk add alpine-sdk alpine-conf syslinux xorriso squashfs-tools grub grub-efi doas
          apk add mtools dosfstools grub-efi

      - name: Create 'build' user and add to 'abuild' group
        run: |
          adduser -D build -G abuild

      - name: Configure doas permissions
        run: |
          echo "permit :abuild" > /etc/doas.d/doas.conf
          echo "permit persist :abuild" >> /etc/doas.d/doas.conf

      - name: Switch to 'build' user
        run: |
          su - build -c "echo 'Switched to build user'"

      - name: Generate signing keys
        run: |
          su - build -c "abuild-keygen -i -a"
          su - build -c "ls /etc/apk/keys/"

      - name: Clone Alpine aports repository
        run: |
          su - build -c "git clone --depth=1 https://gitlab.alpinelinux.org/alpine/aports.git"

      - name: Update apk index
        run: |
          doas apk update

      - name: Ensure sufficient /tmp space
        run: |
          su - build -c "mkdir -pv ~/tmp"
          su - build -c "export TMPDIR=~/tmp"

      - name: Create mkimg profile script
        run: |
          su - build -c "export PROFILENAME=nas"
          su - build -c "cat << EOF > ~/aports/scripts/mkimg.\$PROFILENAME.sh
profile_\$PROFILENAME() {
    profile_standard
    kernel_cmdline=\"unionfs_size=512M console=tty0 console=ttyS0,115200\"
    syslinux_serial=\"0 115200\"
    kernel_addons=\"zfs\"
    apks=\"\$apks iscsi-scst zfs-scripts zfs zfs-utils-py
        cciss_vol_status lvm2 mdadm mkinitfs mtools nfs-utils
        parted rsync sfdisk syslinux util-linux xfsprogs
        dosfstools ntfs-3g
        \"
    local _k _a
    for _k in \$kernel_flavors; do
        apks=\"\$apks linux-\$_k\"
        for _a in \$kernel_addons; do
            apks=\"\$apks \$_a-\$_k\"
        done
    done
    apks=\"\$apks linux-firmware\"
}
EOF"
          su - build -c "chmod +x ~/aports/scripts/mkimg.\$PROFILENAME.sh"

      - name: Create custom genapkovl script
        run: |
          su - build -c "cp ~/aports/scripts/genapkovl-dhcp.sh ~/aports/scripts/genapkovl-mkimgoverlay.sh"
          su - build -c "sed -i '/mkdir -p \"\$tmp\"\/etc\/apk/a\\
makefile root:root 0644 \"\$tmp\"/etc/apk/world <<EOF\\
alpine-base\\
iscsi-scst\\
zfs-scripts\\
zfs\\
zfs-utils-py\\
cciss_vol_status\\
lvm2\\
mdadm\\
mkinitfs\\
mtools\\
nfs-utils\\
parted\\
rsync\\
sfdisk\\
syslinux\\
util-linux\\
xfsprogs\\
dosfstools\\
ntfs-3g\\
EOF' ~/aports/scripts/genapkovl-mkimgoverlay.sh"

          su - build -c "sed -i '/^rc_add/ a\\
rc_add zfs boot' ~/aports/scripts/genapkovl-mkimgoverlay.sh"

          su - build -c "echo 'apkovl=\"aports/scripts/genapkovl-mkimgoverlay.sh\"' >> ~/aports/scripts/mkimg.\$PROFILENAME.sh"

      - name: Create ISO output directory
        run: |
          su - build -c "mkdir -p ~/iso"

      - name: Build the custom Alpine ISO
        run: |
          su - build -c "sh ~/aports/scripts/mkimage.sh --tag edge \
            --outdir ~/iso \
            --arch x86_64 \
            --repository https://dl-cdn.alpinelinux.org/alpine/edge/main \
            --profile \$PROFILENAME"

      - name: Upload ISO as artifact
        uses: actions/upload-artifact@v3
        with:
          name: custom-alpine-iso
          path: /home/build/iso/*.iso
