name: Build Alpine ISO

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Run Docker container to build the ISO
      - name: Build custom Alpine ISO in Docker
        run: |
          # Pull Alpine image and run commands inside the container
          docker run --rm -v $(pwd)/iso:/iso alpine:latest /bin/sh -c "
            # Install necessary packages
            apk update && apk add alpine-sdk alpine-conf syslinux xorriso squashfs-tools grub grub-efi doas mtools dosfstools git

            # Create build user
            adduser -D build -G abuild
            echo 'permit :abuild' > /etc/doas.d/doas.conf
            echo 'permit persist :abuild' >> /etc/doas.d/doas.conf
            su - build -c 'abuild-keygen -i -a -n'

            # Clone the aports repository
            git clone --depth=1 https://gitlab.alpinelinux.org/alpine/aports.git /home/build/aports

            # Create custom profile for the ISO
            cat << EOF > /home/build/aports/scripts/mkimg.nas.sh
            profile_nas() {
              profile_standard
              kernel_cmdline=\"unionfs_size=512M console=tty0 console=ttyS0,115200\"
              syslinux_serial=\"0 115200\"
              kernel_addons=\"zfs\"
              apks=\"\$apks iscsi-scst zfs-scripts zfs zfs-utils-py
                    cciss_vol_status lvm2 mdadm mkinitfs mtools nfs-utils
                    parted rsync sfdisk syslinux util-linux xfsprogs
                    dosfstools ntfs-3g\"
              local _k _a
              for _k in \$kernel_flavors; do
                apks=\"\$apks linux-\$_k\"
                for _a in \$kernel_addons; do
                  apks=\"\$apks \$_a-\$_k\"
                done
              done
              apks=\"\$apks linux-firmware\"
            }
            EOF

            # Make the script executable
            chmod +x /home/build/aports/scripts/mkimg.nas.sh

            # Build the ISO
            mkdir -p /iso
            sh /home/build/aports/scripts/mkimage.sh --tag edge --outdir /iso --arch x86_64 --repository https://dl-cdn.alpinelinux.org/alpine/edge/main --profile nas
          "

      # Step 3: Upload ISO artifact
      - name: Upload ISO artifact
        uses: actions/upload-artifact@v3
        with:
          name: custom-alpine-iso
          path: iso/
