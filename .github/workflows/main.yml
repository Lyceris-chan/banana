name: Build Custom ISO

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Alpine environment
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86 curl

          # Install Alpine via chroot
          sudo mkdir -p /alpine-root
          curl -o alpine-minirootfs.tar.gz http://dl-cdn.alpinelinux.org/alpine/latest-stable/releases/x86_64/alpine-minirootfs-latest-x86_64.tar.gz
          sudo tar -xzf alpine-minirootfs.tar.gz -C /alpine-root
          sudo mount -t proc proc /alpine-root/proc
          sudo mount --rbind /sys /alpine-root/sys
          sudo mount --rbind /dev /alpine-root/dev

      - name: Install prerequisites
        run: |
          sudo chroot /alpine-root /bin/sh -c "apk update && apk add alpine-sdk alpine-conf syslinux xorriso squashfs-tools grub grub-efi doas mtools dosfstools"

      - name: Set up build user
        run: |
          sudo chroot /alpine-root /bin/sh -c "adduser -D build -G abuild"
          echo "permit :abuild" | sudo tee /alpine-root/etc/doas.d/doas.conf
          echo "permit persist :abuild" | sudo tee -a /alpine-root/etc/doas.d/doas.conf

      - name: Generate signing keys
        run: |
          sudo chroot /alpine-root /bin/sh -c "su - build -c 'abuild-keygen -i -a'"

      - name: Clone aports repository
        run: |
          sudo chroot /alpine-root /bin/sh -c "su - build -c 'git clone --depth=1 https://gitlab.alpinelinux.org/alpine/aports.git'"

      - name: Create custom profile
        run: |
          sudo chroot /alpine-root /bin/sh -c "su - build -c 'mkdir -p ~/aports/scripts'"
          sudo chroot /alpine-root /bin/sh -c 'cat << EOF > /alpine-root/home/build/aports/scripts/mkimg.nas.sh
          profile_nas() {
            profile_standard
            kernel_cmdline="unionfs_size=512M console=tty0 console=ttyS0,115200"
            syslinux_serial="0 115200"
            kernel_addons="zfs"
            apks="\$apks iscsi-scst zfs-scripts zfs zfs-utils-py
                  cciss_vol_status lvm2 mdadm mkinitfs mtools nfs-utils
                  parted rsync sfdisk syslinux util-linux xfsprogs
                  dosfstools ntfs-3g"
            local _k _a
            for _k in \$kernel_flavors; do
              apks="\$apks linux-\$_k"
              for _a in \$kernel_addons; do
                apks="\$apks \$_a-\$_k"
              done
            done
            apks="\$apks linux-firmware"
          }
          EOF'

      - name: Build ISO image
        run: |
          sudo chroot /alpine-root /bin/sh -c 'mkdir -p /home/build/iso'
          sudo chroot /alpine-root /bin/sh -c 'sh /home/build/aports/scripts/mkimage.sh --tag edge \
          --outdir /home/build/iso \
          --arch x86_64 \
          --repository https://dl-cdn.alpinelinux.org/alpine/edge/main \
          --profile nas'

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v3
        with:
          name: custom-alpine-iso
          path: /alpine-root/home/build/iso/
